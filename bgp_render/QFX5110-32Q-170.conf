interfaces {
    et-0/0/0 {
        unit 0 {
            description "connection to poc-qfx5110-172 on et-0/0/1";
            family inet {
                address 100.0.0.5/31;
            }
        }
    }
    et-0/0/1 {
        unit 0 {
            description "connection to poc-qfx5110-174 on et-0/0/1";
            family inet {
                address 100.0.0.15/31;
            }
        }
    }
    et-0/0/2 {
        unit 0 {
            description "connection to poc-qfx5110-175 on et-0/0/1";
            family inet {
                address 100.0.0.25/31;
            }
        }
    }
    et-0/0/3 {
        unit 0 {
            description "connection to poc-qfx5110-188 on et-0/0/1";
            family inet {
                address 100.0.0.35/31;
            }
        }
    }
    et-0/0/4 {
        unit 0 {
            description "connection to poc-qfx5110-189 on et-0/0/1";
            family inet {
                address 100.0.0.45/31;
            }
        }
    }
    lo0 {
        unit 0 {
            family inet {
                address 100.0.0.170/32 {
                    primary;
                } 
            }
        }
    }
}
protocols {
    replace:
    bgp {
        log-updown
        group underlay {
            export underlay-networks;
            type external;
            local-as 65170;
            multipath multiple-as;
            neighbor 100.0.0.4 {
                peer-as 65172;
            }
            neighbor 100.0.0.14 {
                peer-as 65174;
            }
            neighbor 100.0.0.24 {
                peer-as 65175;
            }
            neighbor 100.0.0.34 {
                peer-as 65188;
            }
            neighbor 100.0.0.44 {
                peer-as 65189;
            }
        }
    }
}
replace:
routing-options {
    router-id 100.0.0.170;
    autonomous-system 65534;
    forwarding-table {
        export load-balancing-policy;
    }
}

replace:
policy-options {
    policy-statement load-balancing-policy {
        then {
            load-balance per-packet;
        }
    }
    policy-statement underlay-networks {
        term 1 {
            from protocol direct;
            then accept;
        }
    }
}
