---
 - name: Check isis details for all devices.
   hosts: junos-ssh
   connection: local
   gather_facts: no
   tasks:
   - name: Check if interface is configured to be up.
     junos_command:
      display: 'xml'
      commands:
       - "show interfaces terse {{ item.interface }}"
      waitfor:
       - "result[0]['rpc-reply']['interface-information']['physical-interface']['admin-status'] eq up"
      retries: 3
      interval: 3
#      provider: "{{ credentials }}"
     with_items:
     - "{{ neighbors }}"
     when: item.interface is defined

   - name: Check if interface status is operational.
     junos_command:
      display: 'xml'
      commands:
       - "show interfaces terse {{ item.interface }}"
      waitfor:
       - "result[0]['rpc-reply']['interface-information']['physical-interface']['oper-status'] eq up"
      retries: 3
      interval: 3
 #     provider: "{{ credentials }}"
     with_items:
     - "{{ neighbors }}"
     when: item.interface is defined

   - name: Check if the interface has the properly configured ip address
     junos_command:
      display: 'xml'
      commands:
       - "show interfaces terse {{ item.interface }}"
      waitfor:
       - "result[0]['rpc-reply']['interface-information']['physical-interface']['logical-interface']['address-family'][0]['interface-address']['ifa-local'] eq {{ item.local_ip}}/31"
      retries: 3
      interval: 3
 #     provider: "{{ credentials }}"
     with_items:
     - "{{ neighbors }}"
     when: item.interface is defined

   - name: Check if all ISIS adjacencies are formed and up.
     junos_command:
      display: 'xml'
      commands:
       - show isis adjacency "{{ item.name }}"
      wait_for:
       - "result[0]['rpc-reply']['isis-adjacency-information']['isis-adjacency']['adjacency-state'] eq 'Up'"
      retries: 3
      interval: 3
     with_items:
     - "{{ neighbors }}"
     when: item.name is defined
     register: response

 #  - name: "Debug with items. 1st item"
 #    debug:
 #       var: response['results'][0]['output'][0]['rpc-reply']

   - name: Check if junos devices have learned all of the directly connected loopback addresses via ISIS
     junos_command:
      display: 'xml'
      commands:
       - show route protocol isis table inet.0 terse "{{ item.peer_loopback }}"
      wait_for:
       - "result[0]['rpc-reply']['route-information']['route-table']['rt']['rt-entry']['protocol-name'] eq IS-IS"
      retries: 3
      interval: 3
     with_items:
     - "{{ neighbors }}"
     when: item.peer_loopback is defined

   - name: Check if junos devices have learned all of the loopback addresses via ISIS
     junos_command:
      display: 'xml'
      commands:
       - show route protocol isis table inet.0 terse "{{ item.peer_loopback }}"
      wait_for:
       - "result[0]['rpc-reply']['route-information']['route-table']['rt']['rt-entry']['protocol-name'] eq IS-IS"
      retries: 3
      interval: 3
     with_items:
     - "{{ neighbors }}"
     when: item.peer_loopback is defined
